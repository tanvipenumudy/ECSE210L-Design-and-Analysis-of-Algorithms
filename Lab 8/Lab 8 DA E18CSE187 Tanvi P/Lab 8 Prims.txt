Primâ€™s

import java.util.*; 
import java.lang.*; 
import java.io.*;
 
class Main
 
{
 
private static final int V=5;
 
int minKey(int key[],Boolean mstSet[])
 
{
 
int min=Integer.MAX_VALUE,min_index=-1;
 
for(int v=0;v<V;v++)
 
if(mstSet[v]==false && key[v]<min)
 
{
 
min=key[v]; min_index=v;
 
}
 
return min_index;
 
}
 
void printMST(int parent[],int n,int graph[][])
 
{
 
System.out.println("Edge\tWeight"); 
for(int i=1;i<V;i++) System.out.println(parent[i]+"-"+i+"\t"+graph[i][parent[i]]);
 
}
 
void primMST(int graph[][])
 
{
 
int parent[]=new int[V];
 
int key[]=new int[V];
 
Boolean mstSet[]=new Boolean[V];
 
for(int i=0;i<V;i++)
 
{
 
key[i]=Integer.MAX_VALUE; mstSet[i]=false;
 
}
 
key[0]=0; parent[0]=-1;
 
for(int count=0;count<V-1;count++)
 
{
 
int u=minKey(key,mstSet);
 
mstSet[u]=true;
 
for(int v=0;v<V;v++)
 
if(graph[u][v]!=0 && mstSet[v]==false && graph[u][v]<key[v])
 
{
 
parent[v]=u;
 
key[v]=graph[u][v];
 
}
 
}
 
printMST(parent,V,graph);
 
}
 
public static void main(String[]args)
 
{
 
System.out.println("0->A");
 
System.out.println("1->B");
 
System.out.println("2->C");
 
System.out.println("3->D");
 
System.out.println("4->E");

System.out.println("5->F");
 
System.out.println("6->G");
 
System.out.println("7->H");

System.out.println("8->I");
 
System.out.println("9->J");
 
Main t=new Main();
 
int graph[][]=new int[][]{{0,4,0,0,0,0,0,8,0},{4,0,8,0,0,0,0,11,0},{0,8,0,7,0,4,0,0,2},{0,0,7,0,9,14,0,0,2},{0,0,7,0,9,14,0,0,0},{0,0,0,9,0,10,0,0,0},{0,0,4,14,10,0,2,0,0},{0,0,0,0,0,2,0,1,6},{8,11,0,0,0,0,1,0,7},{0,0,2,0,0,0,6,7,0}};
 
t.primMST(graph);
 
}
 
}
